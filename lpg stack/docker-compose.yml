
x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

x-common-labels: &default-labels
  logging: "promtail"
  logging_jobname: "containerlogs"

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.external-url=http://localhost:9090'
      - '--log.level=error'
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - monitor-net
    labels:
      <<: *default-labels
    logging: *default-logging

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--log.level=error'
    restart: unless-stopped
    ports:
      - "9093:9093"
    networks:
      - monitor-net
    labels:
      <<: *default-labels
    logging: *default-logging

  nodeexporter:
    image: prom/node-exporter:v1.8.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - monitor-net
    labels:
      <<: *default-labels
    logging: *default-logging

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/machine-id:/etc/machine-id:ro
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - monitor-net
    labels:
      <<: *default-labels
    logging: *default-logging

  grafana:
    image: grafana/grafana:11.0.0
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_USERS_DEFAULT_THEME=light
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=critical
      - GF_PANELS_ENABLE_ALPHA=true
      - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall lokiLogsDataplane
      - GF_INSTALL_PLUGINS=grafana-polystat-panel,https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app

      
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - monitor-net
    labels:
      <<: *default-labels
    logging: *default-logging

  pushgateway:
    image: prom/pushgateway:v1.9.0
    container_name: pushgateway
    restart: unless-stopped
    ports:
      - "9091:9091"
    networks:
      - monitor-net
    labels:
      <<: *default-labels
    logging: *default-logging
  redis:
    image: redis:${REDIS_VERSION:-6}
    container_name: redis
    ports:
      - 6379:6379
    cpus: 0.5
    mem_limit: 512m
    networks:
      - monitor-net
    labels:
      <<: *default-labels
    logging: *default-logging

  loki:
    image: grafana/loki:3.0.0
    container_name: loki
    user: root
    ports:
      - 3100:3100
    command: 
      - '--config.file=/etc/loki/loki.yaml'
    volumes:
      - ./loki/loki.yaml:/etc/loki/loki.yaml
      - ./loki/rules.yaml:/etc/loki/rules/fake/loki-rules.yml
    networks:
      - monitor-net
    labels:
      <<: *default-labels
    logging: *default-logging

  promtail:
    image:  grafana/promtail:3.0.0
    container_name: promtail
    volumes:
      - ./promtail/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - C:/var/log:/var/log
      - ./DVWA/log:/var/log/apache2
    command: 
      - '--config.file=/etc/promtail/docker-config.yaml'
    depends_on:
      - loki
    networks:
      - monitor-net
    labels:
      <<: *default-labels
    logging: *default-logging
  dvwa:
    image: vulnerables/web-dvwa
    container_name: dvwa
    ports:
      - "80:80" 
    volumes:
      - ./DVWA/log:/var/log/apache2 
    networks:
      - monitor-net
    labels:
      <<: *default-labels
    logging: *default-logging
  attack_detector:
    build:
      context: ./web_attack_detector
      dockerfile: Dockerfile
    volumes:
      - ./DVWA/log:/var/log/apache2  # Gắn thư mục log web
    networks:
      - monitor-net
    ports:
      - "1234:1234"
    labels:
      <<: *default-labels
    logging: *default-logging
    restart: unless-stopped
  ssh_service:
    image: rastasheep/ubuntu-sshd:latest
    container_name: ssh_service
    ports:
      - "2222:22"  # Map cổng SSH container (22) sang cổng 2222 trên host
    volumes:
      - C:/var/log/auth.log:/var/log/auth.log
    environment:
      - SSH_PASSWORD=123  # Cấu hình mật khẩu qua biến môi trường, nếu được hỗ trợ
    labels:
      - "com.docker.compose.service=ssh_service"
    networks:
      - monitor-net
    command: >
      /bin/bash -c "
      apt update &&
      apt install -y rsyslog &&
      service rsyslog start &&
      adduser --disabled-password --gecos '' sshuser &&
      echo 'sshuser:123' | chpasswd &&
      service ssh start &&
      tail -f /dev/null"
    